/*
 * General utility
 */

@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%; // Part 1: Set a maximum relative to the parent
  height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}
img.responsive {
  @include img-responsive;
}

/*
 * Media queries functions and variables adapted from ZURB Foundation
 *
 *   (These variables should match Bootstrap 3 breakpoints, if you want to use
 *   Bootstrap's grid mixins (make-sm-column($columns, $gutter), etc.)
 */

@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range, 1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

// Breakpoints and variables

$mq-xsmall: 480px;
$mq-small: 768px;
$mq-medium: 992px;
$mq-large: 1200px;

$xsmall-range: (($mq-xsmall), ($mq-small - 1));
$small-range: (($mq-small), ($mq-medium - 1));
$medium-range: (($mq-medium), ($mq-large - 1));
$large-range: (($mq-large), ($mq-xlarge - 1));

$screen: "only screen";
$landscape: "#{$screen} and (orientation: landscape)";
$portrait: "#{$screen} and (orientation: portrait)";

$xsmall-up: "#{$screen} and (min-width:#{lower-bound($xsmall-range)})";
$xsmall-only: "#{$screen} and (min-width:#{lower-bound($xsmall-range)}) and (max-width:#{upper-bound($xsmall-range)})";
$small-up: "#{$screen} and (min-width:#{lower-bound($small-range)})";
$small-only: "#{$screen} and (min-width:#{lower-bound($small-range)}) and (max-width:#{upper-bound($small-range)})";
$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})";
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})";
$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})";

/*
 * High-DPI
 */

@mixin if-min-resolution($dppx) {
  @include if-resolution(min, $dppx) {
    @content;
  }
}

@mixin if-max-resolution($dppx) {
  @include if-resolution(max, $dppx) {
    @content;
  }
}

@mixin if-resolution($prefix, $dppx) {
  // 1px = 96dpi
  $dpi: $dppx * 96;
  @media
    (-webkit-#{$prefix}-device-pixel-ratio: #{$dppx}),
    (   #{$prefix}--moz-device-pixel-ratio: #{$dppx}),
    (     -o-#{$prefix}-device-pixel-ratio: #{$dppx*2}/2),
    (        #{$prefix}-device-pixel-ratio: #{$dppx}),
    (                #{$prefix}-resolution: #{$dpi}dpi),
    (                #{$prefix}-resolution: #{$dppx}dppx) {
      @content;
  }
}
